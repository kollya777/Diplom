Этот проект представляет собой набор скриптов на Python для визуализации данных о курсе криптовалюты, включая Bitcoin, Ethereum и Ripple, за годы с 2016 по 2020. В проекте используются три популярных библиотеки для визуализации: Matplotlib, Seaborn и Plotly. Данные извлекаются из файла gapminder.csv, который находится в папке data.
Структура проекта:
/diplom
│
├── crypto_analysis/
│   ├── Matplotlib.py
│   ├── Seaborn.py
│   └── Plotly.py
└── data/
    └── gapminder.csv

Файлы .py
●	Matplotlib.py:
Этот скрипт загружает данные из файла gapminder.csv и создает несколько графиков:
●	Линейный график, отображающий изменения курса криптовалюты за несколько лет.
●	Гистограмму, показывающую распределение курса криптовалюты в 2020 году.
●	Диаграмму рассеяния, сравнивающую курс криптовалюты в 2016 и 2020 годах.
●	Круговую диаграмму, показывающую средний курс криптовалюты за указанный период.
Используются функции библиотеки Matplotlib для создания графиков.
●	
●	Seaborn.py:
Этот скрипт создает несколько визуализаций с использованием библиотеки Seaborn:
●	Линейный график, отображающий изменения курса криптовалюты по годам.
●	Столбчатую диаграмму, показывающую распределение курса криптовалюты по годам.
Seaborn позволяет создавать стильные и информативные графики с минимальным количеством кода.
●	
●	Plotly.py:
Этот скрипт создает интерактивные визуализации с использованием Plotly Express:
●	Линейный график, показывающий изменения курса криптовалюты по годам.
●	Гистограмму, сравнивающую курс криптовалюты между различными валютами.
●	Диаграмму рассеяния, отображающую взаимосвязь между годами и курсом криптовалюты.
●	Круговую диаграмму, показывающую средний курс криптовалюты за указанный период.
Все графики сохраняются в формате HTML для интерактивного просмотра.
●	
Папка data
●	gapminder.csv:
Файл CSV, содержащий данные о курсе криптовалюты (Bitcoin, Ethereum и Ripple) за годы с 2016 по 2020. Эти данные используются во всех скриптах для визуализации.
Установка зависимостей
Для запуска скриптов необходимо установить следующие библиотеки:

pip install matplotlib seaborn plotly pandas

Этот текст описывает структуру проекта и его содержимое с учетом новых данных о криптовалюте и соответствующих скриптов.

Сравнительная таблица библиотек:

Библиотека	Описание	Преимущества	Недостатки
Matplotlib	Базовая библиотека для создания статических графиков. Подходит для создания широкого спектра визуализаций.	- Высокая гибкость и контроль над графиками
- Поддержка множества форматов вывода (PNG, PDF, SVG и др.)
- Широкие возможности кастомизации графиков	- Сложность в использовании для новичков
- Требует больше кода для создания сложных графиков
Seaborn	Построена на основе Matplotlib, упрощает создание статистических графиков и визуализацию сложных наборов данных.	- Простота использования
- Стильные и информативные графики
- Автоматическая обработка статистики и цветовых палитр	- Меньшая гибкость по сравнению с Matplotlib
- Ограниченные возможности для кастомизации отдельных элементов
Plotly	Библиотека для создания интерактивных графиков. Позволяет создавать визуализации, которые можно исследовать в браузере.	- Интерактивность (возможность масштабирования, наведения и т.д.)
- Возможность сохранять графики в формате HTML
- Поддержка 3D-графиков и анимации	- Более высокая нагрузка на производительность при работе с большими наборами данных
- Потребность в интернет-соединении для некоторых функций



Примеры графиков (скриншоты)
Matplotlib:
 
 
 
Seaborn:
 
 
 
Plotly:
 
 
  
